"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVersion = exports.Parser = void 0;
const parser_1 = require("./field_parsers/version_eight/parser");
const parser_2 = require("./field_parsers/version_five/parser");
const parser_3 = require("./field_parsers/version_four/parser");
const parser_4 = require("./field_parsers/version_nine/parser");
const parser_5 = require("./field_parsers/version_one/parser");
const parser_6 = require("./field_parsers/version_seven/parser");
const parser_7 = require("./field_parsers/version_six/parser");
const parser_8 = require("./field_parsers/version_three/parser");
const parser_9 = require("./field_parsers/version_two/parser");
const Parser = (raw) => {
    const version = (0, exports.getVersion)(raw);
    const parser = getParser(version);
    const license = parser.parse(raw);
    return { license, version, raw };
};
exports.Parser = Parser;
const getParser = (version) => {
    switch (version) {
        case '01':
            return new parser_5.VersionOneParser();
        case '02':
            return new parser_9.VersionTwoParser();
        case '03':
            return new parser_8.VersionThreeParser();
        case '04':
            return new parser_3.VersionFourParser();
        case '05':
            return new parser_2.VersionFiveParser();
        case '06':
            return new parser_7.VersionSixParser();
        case '07':
            return new parser_6.VersionSevenParser();
        case '08':
            return new parser_1.VersionEightParser();
        case '09':
            return new parser_4.VersionNineParser();
        default:
            return new parser_5.VersionOneParser();
    }
};
const getVersion = (data) => {
    const regex = /\d{6}(\d{2})\w+/g;
    const matches = regex.exec(data);
    if (matches && (matches === null || matches === void 0 ? void 0 : matches.length) > 1) {
        return matches[1];
    }
    return '01';
};
exports.getVersion = getVersion;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGlFQUEwRTtBQUMxRSxnRUFBd0U7QUFDeEUsZ0VBQXdFO0FBQ3hFLGdFQUF3RTtBQUN4RSwrREFBc0U7QUFDdEUsaUVBQTBFO0FBQzFFLCtEQUFzRTtBQUN0RSxpRUFBMEU7QUFDMUUsK0RBQXNFO0FBRS9ELE1BQU0sTUFBTSxHQUFHLENBQ3BCLEdBQVcsRUFDeUMsRUFBRTtJQUN0RCxNQUFNLE9BQU8sR0FBRyxJQUFBLGtCQUFVLEVBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEMsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xDLE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUM7QUFDbkMsQ0FBQyxDQUFDO0FBUFcsUUFBQSxNQUFNLFVBT2pCO0FBRUYsTUFBTSxTQUFTLEdBQUcsQ0FBQyxPQUFzQixFQUFFLEVBQUU7SUFDM0MsUUFBUSxPQUFPLEVBQUU7UUFDZixLQUFLLElBQUk7WUFDUCxPQUFPLElBQUkseUJBQWdCLEVBQUUsQ0FBQztRQUNoQyxLQUFLLElBQUk7WUFDUCxPQUFPLElBQUkseUJBQWdCLEVBQUUsQ0FBQztRQUNoQyxLQUFLLElBQUk7WUFDUCxPQUFPLElBQUksMkJBQWtCLEVBQUUsQ0FBQztRQUNsQyxLQUFLLElBQUk7WUFDUCxPQUFPLElBQUksMEJBQWlCLEVBQUUsQ0FBQztRQUNqQyxLQUFLLElBQUk7WUFDUCxPQUFPLElBQUksMEJBQWlCLEVBQUUsQ0FBQztRQUNqQyxLQUFLLElBQUk7WUFDUCxPQUFPLElBQUkseUJBQWdCLEVBQUUsQ0FBQztRQUNoQyxLQUFLLElBQUk7WUFDUCxPQUFPLElBQUksMkJBQWtCLEVBQUUsQ0FBQztRQUNsQyxLQUFLLElBQUk7WUFDUCxPQUFPLElBQUksMkJBQWtCLEVBQUUsQ0FBQztRQUNsQyxLQUFLLElBQUk7WUFDUCxPQUFPLElBQUksMEJBQWlCLEVBQUUsQ0FBQztRQUNqQztZQUNFLE9BQU8sSUFBSSx5QkFBZ0IsRUFBRSxDQUFDO0tBQ2pDO0FBQ0gsQ0FBQyxDQUFDO0FBRUssTUFBTSxVQUFVLEdBQUcsQ0FBQyxJQUFZLEVBQUUsRUFBRTtJQUN6QyxNQUFNLEtBQUssR0FBRyxrQkFBa0IsQ0FBQztJQUNqQyxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pDLElBQUksT0FBTyxJQUFJLENBQUEsT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLE1BQU0sSUFBRyxDQUFDLEVBQUU7UUFDbEMsT0FBTyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbkI7SUFDRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUMsQ0FBQztBQVBXLFFBQUEsVUFBVSxjQU9yQiJ9